### GET raiz
GET http://localhost:5092/

### GET todos os livros
GET http://localhost:5092/api/livros

### GET livro por ID
GET http://localhost:5092/api/livros/1

### POST novo livro
POST http://localhost:5092/api/livros
Content-Type: application/json

{
    "titulo": "O Hobbit",
    "autor": "J.R.R. Tolkien",
    "anoPublicacao": 1937
}

### PUT atualizar livro
PUT http://localhost:5092/api/livros/3
Content-Type: application/json

{
    "titulo": "O Hobbit ‚Äî Edi√ß√£o Revisada",
    "autor": "J.R.R. Tolkien",
    "anoPublicacao": 1951
}

### DELETE livro
DELETE http://localhost:5092/api/livros/3



//Fronte b√°sico 

<body>
  <div class="container">
  
    <!-- T√çTULO GERAL -->
    <div class="card">
      <h1>API DE BUSCA DE REFER√äNCIAS BIBLIOGR√ÅFICAS</h1>
    </div>
  
    <!-- BUSCAR REFER√äNCIAS -->
    <div class="card">
      <h2>Buscar Refer√™ncias</h2>
      <input id="filtroId" placeholder="ID" type="number" />
      <input id="filtroTitulo" placeholder="T√≠tulo" />
      <input id="filtroAutor" placeholder="Autor" />
      <input id="filtroAno" placeholder="Ano" type="number" />
      <select id="filtroTipo">
        <option value="">Tipo</option>
        <option value="Livro">Livro</option>
        <option value="Ebook">Ebook</option>
        <option value="Artigo">Artigo</option>
        <option value="Outro">Outro</option>
      </select>
      <button class="btn-primary" onclick="filtrarLivros()">Pesquisar</button>
      <button class="btn-warning" onclick="limparFiltros()">Limpar</button>
    </div>
  
    <!-- CADASTRO DE REFER√äNCIAS -->
    <div class="card">
      <h2>Cadastro de Refer√™ncias</h2>
      <input id="livroId" placeholder="ID (gerado automaticamente)" readonly />
      <input id="titulo" placeholder="T√≠tulo do livro" />
      <input id="autor" placeholder="Autor do livro" />
      <input id="ano" placeholder="Ano de publica√ß√£o" type="number" />
      <input id="citacao" placeholder="Cita√ß√£o bibliogr√°fica" />
      <select id="tipo">
        <option value="">Selecione o tipo</option>
        <option value="Livro">Livro</option>
        <option value="Ebook">Ebook</option>
        <option value="Artigo">Artigo</option>
        <option value="Outro">Outro</option>
      </select>
      <button class="btn-success" onclick="adicionarOuAtualizarLivro()">Salvar Refer√™ncia</button>
    </div>
  
    <!-- LISTA DE REFER√äNCIAS -->
    <div class="card">
      <h2>Lista de Refer√™ncias Cadastradas</h2>
      <button class="btn-warning" onclick="carregarLivros()">üîÅ Atualizar Lista</button>
      <table>
        <thead>
          <tr>
            <th>A√ß√µes</th>
            <th>T√≠tulo</th>
            <th>Autor</th>
            <th>Ano</th>
            <th>Tipo</th>
            <th>Cita√ß√£o</th>
          </tr>
        </thead>
        <tbody id="tabelaLivros"></tbody>
      </table>
    </div>
  
    <!-- ROTAS DISPON√çVEIS -->
    <div class="card">
      <h2>Rotas dispon√≠veis</h2>
      <p>üîπ <code>GET /api/livros</code> <span class="badge">Listar</span></p>
      <p>üîπ <code>GET /api/livros/{id}</code> <span class="badge">Buscar por ID</span></p>
      <p>üîπ <code>POST /api/livros</code> <span class="badge">Cadastrar</span></p>
      <p>üîπ <code>PUT /api/livros/{id}</code> <span class="badge">Atualizar</span></p>
      <p>üîπ <code>DELETE /api/livros/{id}</code> <span class="badge">Excluir</span></p>
    </div>
  
  </div>
  </body>
  


  //COMFRONT VISUAL

  <!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <title>API de Busca de Refer√™ncias Bibliogr√°ficas</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      margin: 0;
      background-color: #f3f3f3;
    }
    .container {
      padding: 20px 40px;
    }
    .card {
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      padding: 20px;
      margin-bottom: 20px;
    }
    input, select, button {
      padding: 10px;
      margin: 5px;
      font-size: 14px;
      border-radius: 5px;
      border: 1px solid #ccc;
    }
    .btn-primary { background-color: #007bff; color: white; }
    .btn-warning { background-color: #ffc107; color: black; }
    .btn-success { background-color: #28a745; color: white; }
    .btn-edit { cursor: pointer; color: #17a2b8; margin-right: 10px; }
    .btn-delete { cursor: pointer; color: #dc3545; }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 10px;
    }
    th, td {
      border: 1px solid #e0e0e0;
      padding: 10px;
      text-align: left;
    }
    th {
      background-color: #f8f8f8;
    }
    h1, h2 {
      margin-top: 0;
    }
  </style>
</head>
<body>
<div class="container">

  <!-- T√çTULO PRINCIPAL -->
  <div class="card">
    <h1>API DE BUSCA DE REFER√äNCIAS BIBLIOGR√ÅFICAS</h1>
  </div>

  <!-- CADASTRO -->
  <div class="card">
    <h2>Cadastro de Refer√™ncias</h2>
    <input id="livroId" placeholder="ID (gerado automaticamente)" readonly />
    <input id="titulo" placeholder="T√≠tulo do livro" />
    <input id="autor" placeholder="Autor do livro" />
    <input id="ano" placeholder="Ano de publica√ß√£o" type="number" />
    <input id="citacao" placeholder="Cita√ß√£o bibliogr√°fica" />
    <select id="tipo">
      <option value="">Selecione o tipo</option>
      <option value="Livro">Livro</option>
      <option value="Ebook">Ebook</option>
      <option value="Artigo">Artigo</option>
      <option value="Outro">Outro</option>
    </select>
    <button class="btn-success" onclick="adicionarOuAtualizarLivro()">Salvar Refer√™ncia</button>
  </div>

  <!-- BUSCA -->
  <div class="card">
    <h2>Buscar Refer√™ncias</h2>
    <input id="filtroId" placeholder="ID" type="number" />
    <input id="filtroTitulo" placeholder="T√≠tulo" />
    <input id="filtroAutor" placeholder="Autor" />
    <input id="filtroAno" placeholder="Ano" type="number" />
    <select id="filtroTipo">
      <option value="">Tipo</option>
      <option value="Livro">Livro</option>
      <option value="Ebook">Ebook</option>
      <option value="Artigo">Artigo</option>
      <option value="Outro">Outro</option>
    </select>
    <button class="btn-primary" onclick="filtrarLivros()">Pesquisar</button>
    <button class="btn-warning" onclick="limparFiltros()">Limpar</button>
  </div>

  <!-- LISTA -->
  <div class="card">
    <h2>Lista de Refer√™ncias Cadastradas</h2>
    <button class="btn-warning" onclick="carregarLivros()">üîÅ Atualizar Lista</button>
    <table>
      <thead>
        <tr>
          <th>A√ß√µes</th>
          <th>ID</th>
          <th>T√≠tulo</th>
          <th>Autor</th>
          <th>Ano</th>
          <th>Tipo</th>
          <th>Cita√ß√£o</th>
        </tr>
      </thead>
      <tbody id="tabelaLivros"></tbody>
    </table>
  </div>

</div>

<script>
  const API = "http://localhost:5092/api/livros";

  async function carregarLivros() {
    const resposta = await fetch(API);
    const livros = await resposta.json();
    mostrarLivros(livros);
  }

  function mostrarLivros(livros) {
    const tabela = document.getElementById("tabelaLivros");
    tabela.innerHTML = "";
    livros.forEach(livro => {
      const linha = document.createElement("tr");
      linha.innerHTML = `
        <td>
          <span class="btn-edit" onclick="preencherFormulario(${livro.id}, '${livro.tituloLivro}', '${livro.autorLivro}', ${livro.ano}, '${livro.tipoMaterial}', '${livro.citacao}')">‚úèÔ∏è</span>
          <span class="btn-delete" onclick="excluirLivro(${livro.id})">üóëÔ∏è</span>
        </td>
        <td>${livro.id}</td>
        <td>${livro.tituloLivro}</td>
        <td>${livro.autorLivro}</td>
        <td>${livro.ano}</td>
        <td>${livro.tipoMaterial}</td>
        <td>${livro.citacao}</td>
      `;
      tabela.appendChild(linha);
    });
  }

  async function adicionarOuAtualizarLivro() {
    const id = document.getElementById("livroId").value;
    const titulo = document.getElementById("titulo").value;
    const autor = document.getElementById("autor").value;
    const ano = document.getElementById("ano").value;
    const tipo = document.getElementById("tipo").value;
    const citacao = document.getElementById("citacao").value;

    const livro = {
      tituloLivro: titulo,
      autorLivro: autor,
      ano: parseInt(ano),
      tipoMaterial: tipo,
      citacao: citacao
    };

    if (id) {
      await fetch(`${API}/${id}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(livro)
      });
    } else {
      await fetch(API, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(livro)
      });
    }

    limparFormulario();
    carregarLivros();
  }

  function preencherFormulario(id, titulo, autor, ano, tipo, citacao) {
    document.getElementById("livroId").value = id;
    document.getElementById("titulo").value = titulo;
    document.getElementById("autor").value = autor;
    document.getElementById("ano").value = ano;
    document.getElementById("tipo").value = tipo;
    document.getElementById("citacao").value = citacao;
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }

  async function excluirLivro(id) {
    if (confirm("Tem certeza que deseja excluir esta refer√™ncia?")) {
      await fetch(`${API}/${id}`, { method: "DELETE" });
      carregarLivros();
    }
  }

  function limparFormulario() {
    document.getElementById("livroId").value = "";
    document.getElementById("titulo").value = "";
    document.getElementById("autor").value = "";
    document.getElementById("ano").value = "";
    document.getElementById("tipo").value = "";
    document.getElementById("citacao").value = "";
  }

  function filtrarLivros() {
    const id = document.getElementById("filtroId").value;
    const titulo = document.getElementById("filtroTitulo").value.toLowerCase();
    const autor = document.getElementById("filtroAutor").value.toLowerCase();
    const ano = document.getElementById("filtroAno").value;
    const tipo = document.getElementById("filtroTipo").value;

    fetch(API)
      .then(res => res.json())
      .then(livros => {
        const filtrados = livros.filter(livro =>
          (id === "" || livro.id == id) &&
          (titulo === "" || livro.tituloLivro.toLowerCase().includes(titulo)) &&
          (autor === "" || livro.autorLivro.toLowerCase().includes(autor)) &&
          (ano === "" || livro.ano == ano) &&
          (tipo === "" || livro.tipoMaterial === tipo)
        );
        mostrarLivros(filtrados);
      });
  }

  function limparFiltros() {
    document.getElementById("filtroId").value = "";
    document.getElementById("filtroTitulo").value = "";
    document.getElementById("filtroAutor").value = "";
    document.getElementById("filtroAno").value = "";
    document.getElementById("filtroTipo").value = "";
    carregarLivros();
  }

  carregarLivros();
</script>
</body>
</html>
